getwd()
require(usethis)
use_vignette("sftools")
devtools::document("sftools")
setwd("..")
devtools::document("sftools")
devtools::document("sftools")
devtools::document("sftools")
devtools::document("sftools")
devtools::document("sftools")
devtools::document("sftools")
devtools::document("sftools")
require(devtools)
check("sftools")
use_package(package = "dplyr")
usethis::use_package(package = "dplyr")
usethis::use_package(package = "dplyr::`%>%`()")
usethis::use_package(package = "dplyr::`%>%`")
build("sftools")
build("sftools")
#' @import
@import#'
build("sftools")
vignette(sftools)
vignette("sftools")
sftools::tidyverse_conflicts()
log_con <- file("test.log")
cat("write to log", file = log_con) # creates file and writes to it
log_con
cat("write to console") # prints to console
cat("add to log", file = "test.log", append = TRUE)
log_con
version
AirPassengers
acov <- purrr::possibly(function(series){
series <- series[!cumsum(series)==0]
class <- class(series)
length <- length(series)
if(class=="numeric"){
series <- ts(series, start = c(1,1), frequency = 12)
}
if(length(series)>=24){
resi <- stl(series, s.window="periodic", robust=T)$time.series[,3]
(sd(resi[(length-11):length], na.rm = T)*sqrt((12-1)/12))/(mean(series[(length-11):length], na.rm = T))
} else {
sd(series[(length-11):length], na.rm = T)/mean(series[(length-11):length], na.rm = T)
}
}, otherwise = NA)
acov(AirPassengers)
sum12 <- purrr::possibly(function(series){
#series <- series[!cumsum(series)==0]
length <- length(series)
sum(series[(length-11):length], na.rm = T)
}, otherwise = NA)
sum12(AirPassengers)
class_volval <- function(series){
df <- data.frame(index=1:length(series), series)
df <- df[order(df[,"series"], decreasing = T),]
df$cumsum <- cumsum(df$series)/sum(df$series)
df$class <- ifelse(df$cumsum<=.8, "A", ifelse(df$cumsum>.8 & df$cumsum<=.95, "B", "C"))
return(df[order(df$index),"class"])
}
class_volval(AirPassengers)
get()
getwd()
setwd("..")
require(devtools)
build("sftools")
version
setwd("..")
build("sftools")
require(devtools)
install.packages("DescTools")
install.packages("dvmisc")
build("sftools")
build("sftools")
version
require(devtools)
check("sftools")
setwd("..")
check("sftools")
document("sftools")
document("sftools")
document("sftools")
build("sftools")
use_travis("sftools")
getwd()
setwd("~/Projects/Packages/sftools/")
use_travis("sftools")
version
remove.packages("sftools", lib="~/R/R-3.5.1/library")
install.packages("~/Projects/Packages/sftools_0.0.1.2.tar.gz", repos = NULL, type = "source")
`%nin%` <- function(x=`%in%`){
Negate(`%in%`)
}
c %nin% c("c", "b")
%nin%
`%nin%` <- function(){
Negate(`%in%`)
}
c %nin% c("c", "b")
"c" %nin% c("c", "b")
"c" %in% c("c", "b")
nin <- function(){
`%nin%` <<- Negate(`%in%`)
}
nin
"c" %nin% c("c", "b")
nin <- function(x=0){
if(x==0){
`%nin%` <<- Negate(`%in%`)
}
}
nin()
"c" %nin% c("c", "b")
nin
nin()
setwd("..")
require(devtools)
check("sftools")
document("sftools")
document("sftools")
build("sftools")
